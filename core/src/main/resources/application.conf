http {
  server {
    host = "0.0.0.0"
    port = 9000
  }
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on
      autoreceive = off
      lifecycle = on
    }

//    serializers {
//      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
//    }
//
//    serialization-bindings {
//      "akka.persistence.PersistentRepr" = kryo
//      "java.io.Serializable" = kryo
//    }

//    kryo  {
//      type = "graph"
//      idstrategy = "incremental"
//      buffer-size = 4096
//      max-buffer-size = -1
//      kryo-trace = false
//      implicit-registration-logging = false
//      use-manifests = false
//      post-serialization-transformations = "lz4"
//    }
  }

  loglevel = DEBUG
  log-dead-letters = on
  log-dead-letters-during-shutdown = off

  remote {
    log-sent-messages = off
    log-received-messages = off
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://TurbineAnalyzerSystem@127.0.0.1:2551"]
    auto-down-unreachable-after = 10s
  }

  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
//    snapshot-store.plugin = "akka.persistence.journal.inmem"
  }

//  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
}
